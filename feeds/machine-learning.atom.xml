<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>エンジニア・研究者の英語学習</title><link href="http://englishforhackers.com/" rel="alternate"></link><link href="http://englishforhackers.com/feeds/machine-learning.atom.xml" rel="self"></link><id>http://englishforhackers.com/</id><updated>2018-03-25T00:00:00-04:00</updated><entry><title>Googleの研究者が教える、良い機械学習プロダクトを実装するための43のルール</title><link href="http://englishforhackers.com/rules-of-machine-learning-best-practices-for-ml-engineering.html" rel="alternate"></link><published>2018-03-25T00:00:00-04:00</published><updated>2018-03-25T00:00:00-04:00</updated><author><name>Masato Hagiwara</name></author><id>tag:englishforhackers.com,2018-03-25:rules-of-machine-learning-best-practices-for-ml-engineering.html</id><summary type="html">&lt;p&gt;Google のリサーチ・サイエンティストである Martin Zinkevich 氏によって書かれた、機械学習を使った良いプロダクトを開発するためのコツを集めた記事。エンジニアが良い機械学習プロダクトを作るには、機械学習の専門知識が無いことに苦心するのではなく、得意なエンジニアリングの技術を活かすことが重要、というのが主な趣旨です。&lt;/p&gt;
&lt;p&gt;紹介記事：&lt;a href="http://martin.zinkevich.org/rules_of_ml/rules_of_ml.pdf"&gt;Rules of Machine Learning: Best Practices for ML Engineering&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;はじめに&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ほとんどの問題はエンジニアリングに関する問題である&lt;/li&gt;
&lt;li&gt;性能向上は、良い機械学習のアルゴリズムではなく、良い素性によってもたらされる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;機械学習の前に&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ルール1. 本当に必要になるまで機械学習を使わない&lt;/li&gt;
&lt;li&gt;ルール2. まず指標を設計、実装する&lt;/li&gt;
&lt;li&gt;ルール3. ヒューリスティックが複雑になりすぎる前に、機械学習に移行する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;フェーズI: 最初のパイプライン&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ルール4. 最初のモデルはシンプルに。インフラをまず整える&lt;/li&gt;
&lt;li&gt;ルール5. インフラを機械学習とは独立にテストする&lt;ul&gt;
&lt;li&gt;素性は正しく計算できているか。モデルは訓練環境とテスト環境で同じ値を返すか。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ルール6. パイプラインをコピーする場合は、欠損データに気をつける&lt;/li&gt;
&lt;li&gt;ルール7. ヒューリスティックを素性に変換するか、外部的に扱う&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;モニタリング&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ルール8. モデルの即時性に関する要求を把握する&lt;ul&gt;
&lt;li&gt;例：広告やランキングに関するモデルはすぐに古くなる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ルール9. モデルをデプロイする前に問題を検出する&lt;/li&gt;
&lt;li&gt;ルール10. 「無症状の故障」に気をつける&lt;ul&gt;
&lt;li&gt;例：素性を計算するための統計が古い場合、性能が除々に低下する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ルール11. 素性グループにオーナーを割り当て、ドキュメントを整える&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最初の目的関数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;指標：システムが報告する何らかの数値&lt;/li&gt;
&lt;li&gt;目的関数：機械学習が最適化しようとしている指標&lt;/li&gt;
&lt;li&gt;ルール12. 何を目的関数とするか考えすぎない&lt;/li&gt;
&lt;li&gt;ルール13. 単純で、観察可能な、真の目的関数に帰着可能な指標を選ぶ&lt;ul&gt;
&lt;li&gt;良い例：リンクのクリック率　悪い例：アクティブユーザーの数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ルール14. 解釈可能なモデルから始め、デバッグを簡単にする&lt;ul&gt;
&lt;li&gt;例：線形・ロジスティック・ポワソン回帰&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ルール15. スパムフィルタとランキングをポリシー層で分ける&lt;ul&gt;
&lt;li&gt;ポリシー層：機械学習に、（単純な）ロジックを追加する層&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;フェーズII: 素性エンジニアリング&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ルール16. ローンチして、改善する&lt;/li&gt;
&lt;li&gt;ルール17. 学習された素性ではなく、直接観測・報告可能な素性からはじめる&lt;/li&gt;
&lt;li&gt;ルール18. 複数の状況に対して一般化できる素性を試す&lt;/li&gt;
&lt;li&gt;ルール19. 可能なら、非常に特定的な素性を使う&lt;/li&gt;
&lt;li&gt;ルール20. 人間に解釈可能な方法で素性を変換・結合する&lt;ul&gt;
&lt;li&gt;例1. 離散化 → 年齢から年齢層に変換&lt;/li&gt;
&lt;li&gt;例2. 直積 → 素性どうしのデカルト積　性別ｘ国&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ルール21. 線形モデルで学習可能な素性の数は、データ量に比例&lt;ul&gt;
&lt;li&gt;例：1000インスタンス→10数個の素性&lt;/li&gt;
&lt;li&gt;例：1000万インスタンス→10万素性&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ルール22. 使用されていない素性は削除する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;人間による分析&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ルール23. あなたは典型的なエンドユーザーではない&lt;ul&gt;
&lt;li&gt;必ずユーザーテストか、実ユーザーで実験する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ルール24. モデルの「差分」をまず測定する&lt;/li&gt;
&lt;li&gt;ルール25. 予測性能より、実用的な性能を考えてモデルを選ぶ&lt;/li&gt;
&lt;li&gt;ルール26. 誤りパターンを良く観察し、新しい素性を作る&lt;/li&gt;
&lt;li&gt;ルール27. 望まない振る舞いに対しては、定量化してから最適化する&lt;/li&gt;
&lt;li&gt;ルール28. 短期的な振る舞いが同じでも、長期的な振る舞いが同じだとは限らない&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;訓練時と提供時の歪み&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提供時：モデルの訓練が終わって、その予測をサービス上で実際に使っている時&lt;/li&gt;
&lt;li&gt;ルール29. 訓練時と提供時を同じにするには、提供時に素性をログに出力することで解決&lt;/li&gt;
&lt;li&gt;ルール30. 訓練時にデータを適当に取捨選択するのではなく、重要度サンプリングを使う&lt;/li&gt;
&lt;li&gt;ルール31. テーブルをジョインしている場合は、データが変化する&lt;/li&gt;
&lt;li&gt;ルール32. 訓練パイプラインと提供時のパイプライン間で、なるべくコードを再利用する&lt;/li&gt;
&lt;li&gt;ルール33. モデルを訓練した時に使ったデータよりも新しいデータでテストする&lt;/li&gt;
&lt;li&gt;ルール34. 性能を少し犠牲にしても、綺麗な訓練データを作る&lt;ul&gt;
&lt;li&gt;例：スパムフィルタで、1% を held-out にして必ずユーザーに提示&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ルール35. ランキング問題に内在する歪みに注意する&lt;/li&gt;
&lt;li&gt;ルール36. 位置素性に関するフィードバック・ループに注意&lt;/li&gt;
&lt;li&gt;ルール37. 訓練・提供時の歪みを測定する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;フェーズIII: 鈍化する成長、最適化、複雑なモデル&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ルール38. もし目的関数が合っていないのなら、新しい機能に時間を割かない&lt;/li&gt;
&lt;li&gt;ルール39. ローンチするかの決定は、プロダクトの長期的な目標に合わせる&lt;ul&gt;
&lt;li&gt;ローンチの決定が簡単なのは、全ての指標がよくなった時だけ&lt;/li&gt;
&lt;li&gt;自分が最適化できる指標だけ最大化して満足しない&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ルール40. アンサンブルモデルは、シンプルに&lt;/li&gt;
&lt;li&gt;ルール41. 性能向上が頭打ちになったら、質的に異なる情報源を探す&lt;/li&gt;
&lt;li&gt;ルール42. コンテンツの人気度と、検索結果の多様性・パーソナリゼーション・関連性には関連があると思わない&lt;/li&gt;
&lt;li&gt;ルール43. ユーザーの友人関係・振る舞いはサービス間で似ているかもしれないが、興味はそうでもない&lt;ul&gt;
&lt;li&gt;パーソナリゼーション素性を異なるプロダクトに持って行ってうまく行ったことがない&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用語&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;英語&lt;/th&gt;
&lt;th&gt;日本語&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;heuristics&lt;/td&gt;
&lt;td&gt;ヒューリスティック (答えを導くための割と簡単な方法)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fancy&lt;/td&gt;
&lt;td&gt;(手法、モデルなどが) 凝った&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sanity check&lt;/td&gt;
&lt;td&gt;正しさのチェック&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;feature column&lt;/td&gt;
&lt;td&gt;(Google 独自用語) 素性グループ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;proxy&lt;/td&gt;
&lt;td&gt;代替物 (ここでは、真の目的関数ではないが、それに十分近い指標)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;serve&lt;/td&gt;
&lt;td&gt;提供する (訓練した機械学習モデル・システムの予測を実際にプロダクトで使うこと)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</summary></entry></feed>