<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>エンジニア・研究者の英語学習 - Software Engineering</title><link href="http://englishforhackers.com/" rel="alternate"></link><link href="http://englishforhackers.com/feeds/software-engineering.atom.xml" rel="self"></link><id>http://englishforhackers.com/</id><updated>2018-01-01T00:00:00-05:00</updated><entry><title>英語で読む「Google のソフトウェアエンジニアリング」</title><link href="http://englishforhackers.com/read-software-engineering-at-google-in-english.html" rel="alternate"></link><published>2018-01-01T00:00:00-05:00</published><updated>2018-01-01T00:00:00-05:00</updated><author><name>Masato Hagiwara</name></author><id>tag:englishforhackers.com,2018-01-01:/read-software-engineering-at-google-in-english.html</id><summary type="html">&lt;p&gt;Google にて10年以上ソフトウェアエンジニアとして働き、現在は最近では text-to-speech の研究に従事しているFergus Henderson氏による&lt;/p&gt;
&lt;p&gt;&lt;a href="https://arxiv.org/pdf/1702.01715.pdf"&gt;Software Engineering at Google&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;という記事。Google のソフトウェアエンジニアリングのプロセスや文化が簡単にまとまっていて参考になる点も多いと思います。主要なポイントを簡単にまとめると：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;単一の巨大なリポジトリ。どのエンジニアでも（検索ランキングやセキュリティなどに関わる重要な部分を除き）自由にチェックアウトしてコードが読める。&lt;/li&gt;
&lt;li&gt;分散ビルドシステム Blaze (100〜1000台のサーバーで分散ビルド・テスト) キャッシュにより高速なコンパイルを実現。&lt;/li&gt;
&lt;li&gt;厳格なコードレビュー文化。メインのリポジトリにコミットするコードは必ずコードレビューを経なければいけない。&lt;/li&gt;
&lt;li&gt;ユニットテスト、負荷テスト。&lt;/li&gt;
&lt;li&gt;スタイルガイド、５つの公式言語(C++, Java, Python, Go, JavaScript)のサポート。&lt;/li&gt;
&lt;li&gt;頻繁なリリース（１，２週間ペース） リリースの自動化、ステージング環境における本番トラフィックを使った統合テスト。&lt;/li&gt;
&lt;li&gt;リリース承認プロセス・ツール。&lt;/li&gt;
&lt;li&gt;ポストモーテム：大きな障害が起きた時に書く文書。影響（クエリ数や経済的損失）、再発防止策などを書く。&lt;/li&gt;
&lt;li&gt;数年ごとにソフトウェアの書き直し。&lt;/li&gt;
&lt;li&gt;20 …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Google にて10年以上ソフトウェアエンジニアとして働き、現在は最近では text-to-speech の研究に従事しているFergus Henderson氏による&lt;/p&gt;
&lt;p&gt;&lt;a href="https://arxiv.org/pdf/1702.01715.pdf"&gt;Software Engineering at Google&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;という記事。Google のソフトウェアエンジニアリングのプロセスや文化が簡単にまとまっていて参考になる点も多いと思います。主要なポイントを簡単にまとめると：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;単一の巨大なリポジトリ。どのエンジニアでも（検索ランキングやセキュリティなどに関わる重要な部分を除き）自由にチェックアウトしてコードが読める。&lt;/li&gt;
&lt;li&gt;分散ビルドシステム Blaze (100〜1000台のサーバーで分散ビルド・テスト) キャッシュにより高速なコンパイルを実現。&lt;/li&gt;
&lt;li&gt;厳格なコードレビュー文化。メインのリポジトリにコミットするコードは必ずコードレビューを経なければいけない。&lt;/li&gt;
&lt;li&gt;ユニットテスト、負荷テスト。&lt;/li&gt;
&lt;li&gt;スタイルガイド、５つの公式言語(C++, Java, Python, Go, JavaScript)のサポート。&lt;/li&gt;
&lt;li&gt;頻繁なリリース（１，２週間ペース） リリースの自動化、ステージング環境における本番トラフィックを使った統合テスト。&lt;/li&gt;
&lt;li&gt;リリース承認プロセス・ツール。&lt;/li&gt;
&lt;li&gt;ポストモーテム：大きな障害が起きた時に書く文書。影響（クエリ数や経済的損失）、再発防止策などを書く。&lt;/li&gt;
&lt;li&gt;数年ごとにソフトウェアの書き直し。&lt;/li&gt;
&lt;li&gt;20%タイム。&lt;/li&gt;
&lt;li&gt;OKR (Objective Key Results)：年・四半期単位の具体的目標。目標は高く (平均して65%程度の達成率を目指すように) 設定する。&lt;/li&gt;
&lt;li&gt;役職 (Engineering Manager, Tech Lead) 技術キャリアと管理職キャリアの区別。研究者もエンジニアも研究して論文を書ける。&lt;/li&gt;
&lt;li&gt;"Codelabs" によるエンジニアの研修。メンターの割り当て。&lt;/li&gt;
&lt;li&gt;素晴らしい働きをした同僚に会社負担で $100 を贈れる「ピアボーナス」制度。金銭ボーナス無しの賞賛「kudos」制度。&lt;/li&gt;
&lt;li&gt;委員会による昇進審議。低い業績の場合は業績改善計画 (PIP) の実施。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;英語は割と平易で読みやすいと思います。&lt;/p&gt;
&lt;p&gt;Post-mortem, OKR, 20% time, Peer Bonus など、色々な用語が含まれていますが、私が働いている &lt;a href="https://www.duolingo.com/"&gt;Duolingo&lt;/a&gt; をはじめ、
他のアメリカのテック系の会社でも採用しているところも多いのではないでしょうか。テックニュース等で聞くことも多いので知っておいて損はないかと思います。&lt;/p&gt;
&lt;p&gt;以下、本記事を読むにあたってキーとなる英単語・フレーズとその日本語訳を取り上げます。
意味が難しくても、一般に記事や論文などにあまり出てこない表現や、単に辞書を引けばわかるようなものはあえて取り上げていません。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;英語&lt;/th&gt;
&lt;th&gt;日本語&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;practice&lt;/td&gt;
&lt;td&gt;(この場合は「実行」「やり方」などの意味に近い)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;feasible&lt;/td&gt;
&lt;td&gt;実現可能な&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;declarative&lt;/td&gt;
&lt;td&gt;宣言的な&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;as (someone) see fit&lt;/td&gt;
&lt;td&gt;自らの判断で&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cherry-pick&lt;/td&gt;
&lt;td&gt;好きなものだけを選ぶ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;post-mortem&lt;/td&gt;
&lt;td&gt;検死、システム障害後の検証&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;burn out&lt;/td&gt;
&lt;td&gt;燃え尽きる&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;appraisal&lt;/td&gt;
&lt;td&gt;査定&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;have the final say&lt;/td&gt;
&lt;td&gt;最終決定権がある&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;controversial&lt;/td&gt;
&lt;td&gt;賛否両論ある&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;kudos&lt;/td&gt;
&lt;td&gt;賞賛&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;termination&lt;/td&gt;
&lt;td&gt;解雇&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</content></entry></feed>